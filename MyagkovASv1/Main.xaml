<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1182,3175" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ss="clr-namespace:System.ServiceProcess;assembly=System.ServiceProcess.ServiceController" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:ucad="clr-namespace:UiPath.Core.Activities.DateModifications;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Activities.System.Workflow.Business</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Core.Activities.DateModifications</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.Activities.Contracts</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>System.ServiceProcess</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Activities.Contracts</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceProcess.ServiceController</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="744,3110" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="FirstDay" />
      <Variable x:TypeArguments="x:String" Name="LastDay" />
      <Variable x:TypeArguments="sd:DataTable" Name="Task" />
      <Variable x:TypeArguments="str:Regex" Name="RegexTime">
        <Variable.Default>
          <CSharpValue x:TypeArguments="str:Regex" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">new System.Text.RegularExpressions.Regex(@"\S+\s");</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="str:Regex" Name="RegexDate">
        <Variable.Default>
          <CSharpValue x:TypeArguments="str:Regex" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">new System.Text.RegularExpressions.Regex(@"\s\S+");</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="ExtractDataTable">
        <Variable.Default>
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">new System.Data.DataTable();</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Name="CountRows" />
      <Variable x:TypeArguments="sd:DataTable" Name="Config" />
      <Variable x:TypeArguments="x:Boolean" Name="CheckFile" />
      <Variable x:TypeArguments="x:String" Name="Pass" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ModifyDate CustomDateFormat="{x:Null}" OutDate="{x:Null}" DisplayName="Начало месяца" FormatAsText="True" sap:VirtualizedContainerService.HintSize="682,52" sap2010:WorkflowViewState.IdRef="ModifyDate_1" PredefinedDateFormat="yyyy_MM_dd">
      <ui:ModifyDate.Body>
        <ActivityAction>
          <Sequence DisplayName="Сделать" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ucad:AddSubtractTimePeriodDateModification DisplayName="Добавить/вычесть период времени" sap:VirtualizedContainerService.HintSize="501,52" sap2010:WorkflowViewState.IdRef="AddSubtractTimePeriodDateModification_1" Operation="Subtract" TimeUnit="Months" Value="1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ucad:AddSubtractTimePeriodDateModification>
            <ucad:FindStartEndDateModification DisplayName="Найти начало/конец недели/месяца/года" sap:VirtualizedContainerService.HintSize="501,138" sap2010:WorkflowViewState.IdRef="FindStartEndDateModification_1" TimeUnit="Month" />
          </Sequence>
        </ActivityAction>
      </ui:ModifyDate.Body>
      <ui:ModifyDate.OutText>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">FirstDay</CSharpReference>
        </OutArgument>
      </ui:ModifyDate.OutText>
      <ui:ModifyDate.SourceDate>
        <InArgument x:TypeArguments="s:DateTime">
          <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">DateTime.Today</CSharpValue>
        </InArgument>
      </ui:ModifyDate.SourceDate>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ModifyDate>
    <ui:ModifyDate CustomDateFormat="{x:Null}" OutDate="{x:Null}" DisplayName="Конец месяца" FormatAsText="True" sap:VirtualizedContainerService.HintSize="682,52" sap2010:WorkflowViewState.IdRef="ModifyDate_2" PredefinedDateFormat="yyyy_MM_dd">
      <ui:ModifyDate.Body>
        <ActivityAction>
          <Sequence DisplayName="Сделать" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ucad:AddSubtractTimePeriodDateModification DisplayName="Добавить/вычесть период времени" sap:VirtualizedContainerService.HintSize="501,181" sap2010:WorkflowViewState.IdRef="AddSubtractTimePeriodDateModification_2" Operation="Subtract" TimeUnit="Months" Value="1" />
            <ucad:FindStartEndDateModification DisplayName="Найти начало/конец недели/месяца/года" sap:VirtualizedContainerService.HintSize="501,138" sap2010:WorkflowViewState.IdRef="FindStartEndDateModification_2" Location="LastDay" TimeUnit="Month" />
          </Sequence>
        </ActivityAction>
      </ui:ModifyDate.Body>
      <ui:ModifyDate.OutText>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">LastDay</CSharpReference>
        </OutArgument>
      </ui:ModifyDate.OutText>
      <ui:ModifyDate.SourceDate>
        <InArgument x:TypeArguments="s:DateTime">
          <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">DateTime.Today</CSharpValue>
        </InArgument>
      </ui:ModifyDate.SourceDate>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ModifyDate>
    <ui:FileExistsX DisplayName="File Exists" sap:VirtualizedContainerService.HintSize="682,133" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="Config.xlsx">
      <ui:FileExistsX.Exists>
        <OutArgument x:TypeArguments="x:Boolean">
          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">CheckFile</CSharpReference>
        </OutArgument>
      </ui:FileExistsX.Exists>
    </ui:FileExistsX>
    <ui:IfElseIf DisplayName="Проверка наличия файла Сonfig.xlsx" sap:VirtualizedContainerService.HintSize="682,52" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
      <ui:IfElseIf.ConditionBlocks>
        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
          <ui:IfElseIfBlock BlockType="If">
            <ui:IfElseIfBlock.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">CheckFile</CSharpValue>
              </InArgument>
            </ui:IfElseIfBlock.Condition>
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Текст" sap:VirtualizedContainerService.HintSize="450,163" sap2010:WorkflowViewState.IdRef="Sequence_27">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Чтение конфига" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3">
                  <ueab:ExcelProcessScopeX.Body>
                    <ActivityAction x:TypeArguments="ui:IExcelProcess">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="602,660" sap2010:WorkflowViewState.IdRef="Sequence_22">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Чтение конфига" sap:VirtualizedContainerService.HintSize="540,549" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None" WorkbookPath="Config.xlsx">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_2">
                                  <ueab:ReadRangeX.Range>
                                    <InArgument x:TypeArguments="ue:IReadRangeRef">
                                      <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">Excel.Sheet["Лист1"]</CSharpValue>
                                    </InArgument>
                                  </ueab:ReadRangeX.Range>
                                  <ueab:ReadRangeX.SaveTo>
                                    <OutArgument x:TypeArguments="sd:DataTable">
                                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">Config</CSharpReference>
                                    </OutArgument>
                                  </ueab:ReadRangeX.SaveTo>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:ReadRangeX>
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ueab:ExcelApplicationCard>
                      </Sequence>
                    </ActivityAction>
                  </ueab:ExcelProcessScopeX.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ueab:ExcelProcessScopeX>
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
          <ui:IfElseIfBlock BlockType="Else">
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Текст" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_28">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_4" Reason="Проверьте наличие файла Сonfig.xlsx" />
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
        </sc:BindingList>
      </ui:IfElseIf.ConditionBlocks>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:IfElseIf>
    <ui:FileExistsX DisplayName="File Exists" sap:VirtualizedContainerService.HintSize="682,133" sap2010:WorkflowViewState.IdRef="FileExistsX_2" Path="Task.xlsx">
      <ui:FileExistsX.Exists>
        <OutArgument x:TypeArguments="x:Boolean">
          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">CheckFile</CSharpReference>
        </OutArgument>
      </ui:FileExistsX.Exists>
    </ui:FileExistsX>
    <ui:IfElseIf DisplayName="Проверка наличие файла Task.xlsx" sap:VirtualizedContainerService.HintSize="682,52" sap2010:WorkflowViewState.IdRef="IfElseIf_2">
      <ui:IfElseIf.ConditionBlocks>
        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
          <ui:IfElseIfBlock BlockType="If">
            <ui:IfElseIfBlock.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">CheckFile</CSharpValue>
              </InArgument>
            </ui:IfElseIfBlock.Condition>
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Текст" sap:VirtualizedContainerService.HintSize="450,163" sap2010:WorkflowViewState.IdRef="Sequence_29">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Чтение файла Task" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
                  <ueab:ExcelProcessScopeX.Body>
                    <ActivityAction x:TypeArguments="ui:IExcelProcess">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="546,543" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Чтение файла Task" sap:VirtualizedContainerService.HintSize="484,432" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="Task.xlsx">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="450,163" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ReadRangeX_1">
                                  <ueab:ReadRangeX.Range>
                                    <InArgument x:TypeArguments="ue:IReadRangeRef">
                                      <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">Excel.Sheet["Лист1"]</CSharpValue>
                                    </InArgument>
                                  </ueab:ReadRangeX.Range>
                                  <ueab:ReadRangeX.SaveTo>
                                    <OutArgument x:TypeArguments="sd:DataTable">
                                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">Task</CSharpReference>
                                    </OutArgument>
                                  </ueab:ReadRangeX.SaveTo>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:ReadRangeX>
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                        </ueab:ExcelApplicationCard>
                      </Sequence>
                    </ActivityAction>
                  </ueab:ExcelProcessScopeX.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ueab:ExcelProcessScopeX>
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
          <ui:IfElseIfBlock BlockType="Else">
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Текст" sap:VirtualizedContainerService.HintSize="512,312" sap2010:WorkflowViewState.IdRef="Sequence_31">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Текст" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_30">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_2" Reason="Проверьте наличие файла Task.xlsx" />
                </Sequence>
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
        </sc:BindingList>
      </ui:IfElseIf.ConditionBlocks>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:IfElseIf>
    <uix:NApplicationCard AttachMode="ByInstance" CloseMode="Always" DisplayName="Use Browser Chrome: Новая вкладка" sap:VirtualizedContainerService.HintSize="682,1564" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" InteractionMode="DebuggerApi" ScopeGuid="80876092-324d-49be-a422-3d70ef39ff5b" Version="V2">
      <uix:NApplicationCard.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="648,1347" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="586,1232" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Текст" sap:VirtualizedContainerService.HintSize="552,1115" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch DisplayName="Открытие ссылки" sap:VirtualizedContainerService.HintSize="490,435" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <uix:NGoToUrl ContinueOnError="False" DisplayName="Go To URL" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="NGoToUrl_1" Version="V3">
                          <uix:NGoToUrl.Url>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">string.Format(@"https://moex.com/export/derivatives/currency-rate.aspx?language=en&amp;currency={0}&amp;moment_start={1}&amp;moment_end={2}",Row[0],FirstDay,LastDay)</CSharpValue>
                            </InArgument>
                          </uix:NGoToUrl.Url>
                        </uix:NGoToUrl>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="ss:TimeoutException" sap:VirtualizedContainerService.HintSize="456,272" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="ss:TimeoutException">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ss:TimeoutException" Name="exception" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="450,203" sap2010:WorkflowViewState.IdRef="Sequence_33">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_3" Reason="Времени ожидания превышено, проверьте соединение" />
                            </Sequence>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                    <uix:NExtractData AppendResults="False" ContinueOnError="True" DisplayName="Получение данных" ExtractDataSettings="&lt;Table xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' Type='Table'&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='#' ReferenceName='#' ReferenceIdx='0'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='#1' ReferenceName='moment' ReferenceIdx='1'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='#2' ReferenceName='value' ReferenceIdx='2'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&lt;/Table&gt;" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest'&gt;&lt;column name='#' attr='fulltext' /&gt;&lt;column name='moment' attr='fulltext' /&gt;&lt;column name='value' attr='fulltext' /&gt;&lt;/extract-table&gt;" sap:VirtualizedContainerService.HintSize="490,157" sap2010:WorkflowViewState.IdRef="NExtractData_1" LimitExtractionTo="None" MaximumResults="0" ScopeIdentifier="80876092-324d-49be-a422-3d70ef39ff5b" Version="V3">
                      <uix:NExtractData.DataTable>
                        <InOutArgument x:TypeArguments="sd:DataTable">
                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">ExtractDataTable</CSharpReference>
                        </InOutArgument>
                      </uix:NExtractData.DataTable>
                      <uix:NExtractData.Target>
                        <uix:TargetAnchorable DesignTimeRectangle="16, 327, 193, 657" DesignTimeScaleFactor="1" FriendlyName="'#momentvalue 12023-04-28'" FullSelectorArgument="&lt;webctrl tag='TABLE' /&gt;" Guid="6d6bbf14-f6a3-4888-86ca-fff94630ec4d" InformativeScreenshot="3aad03ef6e182578dd7c26ae0e2b41f6.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Indicative exchange rate' /&gt;" SearchSteps="Selector" Version="V2" Visibility="Interactive" />
                      </uix:NExtractData.Target>
                    </uix:NExtractData>
                    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="#3" DisplayName="Добавление столбца" sap:VirtualizedContainerService.HintSize="490,52" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3">
                      <ui:AddDataColumn.DataTable>
                        <InArgument x:TypeArguments="sd:DataTable">
                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">ExtractDataTable</CSharpValue>
                        </InArgument>
                      </ui:AddDataColumn.DataTable>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AddDataColumn>
                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="490,52" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Текст" sap:VirtualizedContainerService.HintSize="496,441" sap2010:WorkflowViewState.IdRef="Sequence_16">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="variable3" />
                              <Variable x:TypeArguments="str:Regex" Name="RegexTime">
                                <Variable.Default>
                                  <CSharpValue x:TypeArguments="str:Regex" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">new System.Text.RegularExpressions.Regex(@"\S+\s");</CSharpValue>
                                </Variable.Default>
                              </Variable>
                              <Variable x:TypeArguments="x:String" Name="Date" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">Date</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">Row[1].ToString()</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">
                                  <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">Row[3]</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">RegexTime.Replace(Date,"")</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">
                                  <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">Row[1]</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">RegexDate.Replace(Date,"")</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                      <ui:ForEachRow.DataTable>
                        <InArgument x:TypeArguments="sd:DataTable">
                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">ExtractDataTable</CSharpValue>
                        </InArgument>
                      </ui:ForEachRow.DataTable>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachRow>
                    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Запись таблицы в excel" sap:VirtualizedContainerService.HintSize="490,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
                      <ueab:ExcelProcessScopeX.Body>
                        <ActivityAction x:TypeArguments="ui:IExcelProcess">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="592,1126" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="530,1015" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" WorkbookPath="result.xlsx">
                              <ueab:ExcelApplicationCard.Body>
                                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="496,746" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ueab:WriteRangeX DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False">
                                      <ueab:WriteRangeX.Destination>
                                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                          <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">Excel.Sheet["Лист1"].Range[Row[1].ToString()]</CSharpValue>
                                        </InArgument>
                                      </ueab:WriteRangeX.Destination>
                                      <ueab:WriteRangeX.Source>
                                        <InArgument x:TypeArguments="sd:DataTable">
                                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">ExtractDataTable</CSharpValue>
                                        </InArgument>
                                      </ueab:WriteRangeX.Source>
                                    </ueab:WriteRangeX>
                                    <ueab:DeleteColumnX DisplayName="Delete Column" HasHeaders="True" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="DeleteColumnX_1">
                                      <ueab:DeleteColumnX.ColumnName>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">Excel.Sheet["Лист1"].Cell[Row[1].ToString()]</CSharpValue>
                                        </InArgument>
                                      </ueab:DeleteColumnX.ColumnName>
                                      <ueab:DeleteColumnX.Range>
                                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                          <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">Excel.Sheet["Лист1"]</CSharpValue>
                                        </InArgument>
                                      </ueab:DeleteColumnX.Range>
                                    </ueab:DeleteColumnX>
                                    <ueab:FindReplaceValueX FoundAt="{x:Null}" DisplayName="Замена #1" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="FindReplaceValueX_1" LookIn="Values" Operation="Replace">
                                      <ueab:FindReplaceValueX.ReplaceWith>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">"Дата "+ Row[0]</CSharpValue>
                                        </InArgument>
                                      </ueab:FindReplaceValueX.ReplaceWith>
                                      <ueab:FindReplaceValueX.ValueToFind>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">"#1"</CSharpValue>
                                        </InArgument>
                                      </ueab:FindReplaceValueX.ValueToFind>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:FindReplaceValueX.WhereToSearch>
                                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">Excel.Sheet["Лист1"]</CSharpValue>
                                        </InArgument>
                                      </ueab:FindReplaceValueX.WhereToSearch>
                                    </ueab:FindReplaceValueX>
                                    <ueab:FindReplaceValueX FoundAt="{x:Null}" DisplayName="Замена #2" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="FindReplaceValueX_2" LookIn="Values" Operation="Replace">
                                      <ueab:FindReplaceValueX.ReplaceWith>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">"Курс "+ Row[0]</CSharpValue>
                                        </InArgument>
                                      </ueab:FindReplaceValueX.ReplaceWith>
                                      <ueab:FindReplaceValueX.ValueToFind>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">"#2"</CSharpValue>
                                        </InArgument>
                                      </ueab:FindReplaceValueX.ValueToFind>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:FindReplaceValueX.WhereToSearch>
                                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">Excel.Sheet["Лист1"]</CSharpValue>
                                        </InArgument>
                                      </ueab:FindReplaceValueX.WhereToSearch>
                                    </ueab:FindReplaceValueX>
                                    <ueab:FindReplaceValueX FoundAt="{x:Null}" DisplayName="Замена #3" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="FindReplaceValueX_3" LookIn="Values" Operation="Replace">
                                      <ueab:FindReplaceValueX.ReplaceWith>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">"Время "+ Row[0]</CSharpValue>
                                        </InArgument>
                                      </ueab:FindReplaceValueX.ReplaceWith>
                                      <ueab:FindReplaceValueX.ValueToFind>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">"#3"</CSharpValue>
                                        </InArgument>
                                      </ueab:FindReplaceValueX.ValueToFind>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:FindReplaceValueX.WhereToSearch>
                                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">Excel.Sheet["Лист1"]</CSharpValue>
                                        </InArgument>
                                      </ueab:FindReplaceValueX.WhereToSearch>
                                    </ueab:FindReplaceValueX>
                                  </Sequence>
                                </ActivityAction>
                              </ueab:ExcelApplicationCard.Body>
                            </ueab:ExcelApplicationCard>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelProcessScopeX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:ExcelProcessScopeX>
                    <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="#3" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="490,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_3">
                      <ui:RemoveDataColumn.DataTable>
                        <InOutArgument x:TypeArguments="sd:DataTable">
                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">ExtractDataTable</CSharpReference>
                        </InOutArgument>
                      </ui:RemoveDataColumn.DataTable>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:RemoveDataColumn>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <ui:ForEachRow.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">Task</CSharpValue>
                </InArgument>
              </ui:ForEachRow.DataTable>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </uix:NApplicationCard.Body>
      <uix:NApplicationCard.TargetApp>
        <uix:TargetApp Area="-1288, 46, 1296, 1000" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAbxSURBVFhHpZZtTFvnFcf9pWuypg3tmjVrGmLeEoMBG2PaJBDb2CkvyQJpvlXtFqRpmrSXT5s67a3pl0nTptXkhdAklEsCbZdG3VsrVe3AhhBCs3ZDi5ZAo21OA5hAOztNmrXhXj9n//M8j415SUe7I/30P+fh+vzPufcasC03YgF3zkzQ0zITrDLAyPshb3ImVEXTQS/NBDn3RmeClcZ0qHIvX6s/9v/HVIPbfjVU1com2kxcra2k6VovqBQM14sIVBpTAbddt/nsoTb2htlUGgWUWcYQ9dWAR0wFOPcgV8r1VMCj8AOfZ59uufzgyWES00a6sUfm8ww0cTZiuPZViLi/Qp1xrohNbV7m3ZiurXChUSzbIIO/QjDKUBlpE4r73BmdhE5ucys4V/X/HoI3h1EsvYFSjTaa9Kmm8W3aSDXPMJGmxkWTNS4BBaoer3ZhCMfSQ/Azh1FMGWU1z5ipxnIA1hq3kDUbaENlJHMxLmul49XljFDqii35LZnwucMZE4XI3khvo41Uzg1lzc1l7aIrOGO0KV3ZupAycWVLWVjbqnC/tNve/h3/nAmboqk2I7mNNpn57jfoxss9ZMYnKR3i5rskZl4la2QXWecqGcGaYn3LQ5JzHpx5BM5kTcNZ70PlS3uMbUYzjYUq1Fb6dknFxDKvr6YbJ3u0JVE8Kah/bBaYdGkqpU8xzNSLZL3jJ/OtChgxbgzhxjDQYbeqoajVXXAbu3M8LzxGzL4fBjO3io1Z39tSRuN1W+nWpTFp8JeYSd8yPqKqZ65R1T4N8qbwdYqOzsprxM0xst6ugZmLDZUOc85aDi3HEOVJGsG74H5hd4u7ZzdVANb+Jq80ZfCsBOv133TLxkein5AXhhmezso1R3ENh4h3K7PhMk1pljJOMXumpMXm7m42ALm6m4S7p1k8+Ys6ury5lN7b7BTMxGP1siFvV/l0UuLROse1eefv4C5xpC7sFdZZJ5lnS8hagtRwiWFzdTdHXScwwIkmTTO9useLIZwUe8RJN177nWy289kPqeJnyTlglNF0rutvdt6QnxFTJ4R5thhm2TgwlINS0NRQ8Yit/HhTsvz4LkpT1rWLth9spL/7yij2cIm4dWmUxuIWudF8MYnbkKTJJF7MTyZguBGGmiEJMSZInS1K2MqMr8JUImSu659/u5piVcWCN4lcnCXXTxNLA7P5dYLKoRH9QlpDRWSeKSSLQW4NaZV1gbCVdu6kUpiWGjuF1C6lj7Q30vkap2zSd/EWlaHpQtgoW7PP+zA0h3WmAEb5wjoDhgowTD7O5uABks7OHUKxk6BAqvjeUz5hxidoMpGi0p/8+zMxiscmProAkzwyB/Ogdgxhl7XKN3CdsJU8v+OvJR2NpNhBqGXuZH2+UQz2n5SbtHRcJycaO38MWD+Ful9dk59JTZ+CGRvlCnMwlyzJBrBecG4Oro/aHB0NRvGxRpqjQQ7gONYgOP/6a0/JZn/+1yyVwLwYKP1A5nP13HkvHhmH9fYWMk+vBw/B9CHBqnOyWE+vM2yOow0tIGPIyPpovQCsdPy8+ioe6rtJjh99QA6YSF0Izg/1/kdee228E4brYLYO2z6I/EGYK6y0Dqzba7MbgZziI/XJTUfqKRsH69E6wXi79ojR9/8hG//pwi0K/jJJm2CYzdeOfUjn/qlevInEu5QYLCFz4CuatTBdK9JqnX5A5hTNUX+WNz1X37rpuTraqJH5kTqRroHwGntE1/nfSgOOi5OWHIaZwEuaDr6m849bsN1aGD+QwWLt/7JUa2CNsPrXGNKcw9HeYN/Y/igxRVrTeRaisH27CPQ8Sa+MvkEX9R3hGL9+lYy/vUJP/P4H5O/wwWiNYkBr//0ytwbuFzIH2H7+f0ZFbaHWosPbKU1hG+ujxKaFhyWkNCT4ZxldwKk/FMHkS8pU6n3YVipZyFlTA/ct/k/ZHg7kFBwOxQraVOOCQyEqBKx8JpXP2ubX2Tze9TDM7hVm9F4YAlaAM605wormxLTl4sAQ9oK2YCzdMP9gkApA/qGgkHCu66XOL7+JZxxdjQHuAathuBqGUNSa2KJbvzB4iPwDtTHZ9EAt5R2sFQznafJY8XNWmR8I0ve7y8mM3I1N71EKrOgqmK4SnM9G7ob5ik83TwcPkbe/NgbIfiAg8vYHpMochvb9Kk9T076VLr+B5xxZxabQu+ZhRe6Kfbxc8+zAIM/YW2F+W/wYxi86Xs4ns28ljL4oMSMrBNdmBPStDGe+758n+G7khv3GhrCfNrT6Re6zPsF5btgn6+q2zTBZobmTzF4QuTNp9q5s/fj1z7H17QKD5Kz/9bYWDNCFAaLQJKCTp/A7PXJHItX7hZFU7wpjtu+OluVvbLP9F5lmWAkTeM7rAAAAAElFTkSuQmCC" InformativeScreenshot="ccdcacfb452a981a7af6478222bd31ef.png" Selector="&lt;html app='chrome.exe' title='Новая вкладка' /&gt;" Title="Новая вкладка" Url="chrome://newtab/" />
      </uix:NApplicationCard.TargetApp>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uix:NApplicationCard>
    <Assign sap:VirtualizedContainerService.HintSize="682,82" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">
          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">CountRows</CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">ExtractDataTable.Rows.Count+1</CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Форматирование файла" sap:VirtualizedContainerService.HintSize="682,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_4">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="592,1164" sap2010:WorkflowViewState.IdRef="Sequence_24">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="530,1053" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" ResizeWindow="None" WorkbookPath="result.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="496,784" sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="RangeOrCell" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">RangeOrCell</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">Config.Rows[0]["Range"].ToString()+CountRows.ToString()</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <ueab:FillRangeX DisplayName="Fill Range" sap:VirtualizedContainerService.HintSize="434,138" sap2010:WorkflowViewState.IdRef="FillRangeX_1">
                      <ueab:FillRangeX.DestinationRange>
                        <InArgument x:TypeArguments="ue:IWellDefinedReadWriteRangeRef">
                          <CSharpValue x:TypeArguments="ue:IWellDefinedReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">Excel.Sheet["Лист1"].Range[RangeOrCell]</CSharpValue>
                        </InArgument>
                      </ueab:FillRangeX.DestinationRange>
                      <ueab:FillRangeX.Value>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">Config.Rows[0]["Formula"]</CSharpValue>
                        </InArgument>
                      </ueab:FillRangeX.Value>
                    </ueab:FillRangeX>
                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">RangeOrCell</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">Config.Rows[0]["Title"].ToString()</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteCellX_1">
                      <ueab:WriteCellX.Cell>
                        <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                          <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">Excel.Sheet["Лист1"].Cell[RangeOrCell]</CSharpValue>
                        </InArgument>
                      </ueab:WriteCellX.Cell>
                      <ueab:WriteCellX.Value>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">"Результат"</CSharpValue>
                        </InArgument>
                      </ueab:WriteCellX.Value>
                    </ueab:WriteCellX>
                    <ueab:InvokeVBAX Result="{x:Null}" DisplayName="Запуск скрипта" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="InvokeVBAX_4">
                      <ueab:InvokeVBAX.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Сделать" sap2010:WorkflowViewState.IdRef="Sequence_26">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </ActivityAction>
                      </ueab:InvokeVBAX.Body>
                      <ueab:InvokeVBAX.CodeFilePath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">Config.Rows[0]["Script"].ToString()</CSharpValue>
                        </InArgument>
                      </ueab:InvokeVBAX.CodeFilePath>
                      <ueab:InvokeVBAX.EntryMethodName>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">Config.Rows[0]["Method"].ToString()</CSharpValue>
                        </InArgument>
                      </ueab:InvokeVBAX.EntryMethodName>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:InvokeVBAX.Workbook>
                        <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                          <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">Excel</CSharpValue>
                        </InArgument>
                      </ueab:InvokeVBAX.Workbook>
                    </ueab:InvokeVBAX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelProcessScopeX>
    <ui:GetPassword DisplayName="Get Password" sap:VirtualizedContainerService.HintSize="682,25" sap2010:WorkflowViewState.IdRef="GetPassword_1" ProtectedPassword="AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAURIvquJvdkykhBj81n5DMgAAAAACAAAAAAAQZgAAAAEAACAAAADVFLx+HdUQ9ei1ADeM1O0H2N9ToCXBusSTbVCiecMF/AAAAAAOgAAAAAIAACAAAAB39DPiTXtFCtQrWaxZ2RE2hRyGFYUj7l1RgwZoOaDGNCAAAABNcSu1JuPhYFV5EmOS+1bH/Q+dR3BnyHHXnI3qmRWN/kAAAADzmxzhQDCgvVakwZEDi+X4GPif6t95lRYyU1tnhiIZsikRsQbXT2q1vuuERkaTQaQwcdMqIhifOHRAqhx83DlW">
      <ui:GetPassword.Result>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">Pass</CSharpReference>
        </OutArgument>
      </ui:GetPassword.Result>
    </ui:GetPassword>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="682,402" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" DisplayName="Send SMTP Mail Message" Email="myagkoff.m89@yandex.ru" EnableSSL="True" sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="SendMail_1" IgnoreCRL="False" IsBodyHtml="False" Port="465" SecureConnection="Auto" Server="smtp.yandex.ru" TimeoutMS="15000" To="myagkoff.m89@yandex.ru" UseOAuth="False">
          <ui:SendMail.Body>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70" xml:space="preserve">"Количество строк :  " +CountRows.ToString()</CSharpValue>
            </InArgument>
          </ui:SendMail.Body>
          <ui:SendMail.Files>
            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">Config.Rows[0]["UrlResult"].ToString()</CSharpValue>
              </InArgument>
            </scg:List>
          </ui:SendMail.Files>
          <ui:SendMail.Password>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">Pass</CSharpValue>
            </InArgument>
          </ui:SendMail.Password>
          <ui:SendMail.Subject>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">"Данные с сайта moex.com (Дата: "+DateTime.Today.ToString("dd.MM.yyyy")+" )"</CSharpValue>
            </InArgument>
          </ui:SendMail.Subject>
        </ui:SendMail>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="snm:SmtpException" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="snm:SmtpException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="snm:SmtpException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_34">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_5" Reason="Проверьте данные smtp сервера" />
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:ArgumentException" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:ArgumentException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:ArgumentException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_35">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_6" Reason="Проверьте адрес электронной почты и логин пользователя" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>